setwd("G:\\Mi unidad\\PhD\\2. Working area\\6. Teaching\\Cursos\\2018_06_Curso visualización datos\\EMASdataviz\\Datos") #Aquí deberás poner todos los datos
#9. Abrir datos (estudio poselectoral CIS 2016) en formato SPSS y asignar a un data frame
d <- foreign::read.spss("cis3145t.sav", to.data.frame = T) #abierto usando paquete haven
#10. Explora los datos usando la función str()
str(d) #viatazo general a las variables y el tipo
head(d, n=20) #listar los primeros valores de las variables
tail(d, n=20) #listar los últimos valores de las variables
summary(d) #resumen de las variables
#11. Explora las variables confparl, confpart, confjudic, confmedia,
#confbanco, confong, voto15 y voto16
myvars <- c("confparl", "confpart", "confjudic", "confmedia", "confbanco", "confong", "voto16", "voto15")
select(d, myvars) %>% #tabla de frecuencias SjPlot
frq()
library(tidyverse)
library(sjmisc)
#install.packages("tidyverse")
install.packages("sjmisc")
install.packages("sjmisc")
library(sjmisc)
install.packages("rlang")
library(sjmisc)
install.packages("tidyverse")
library(sjmisc)
select(d, myvars) %>% #tabla de frecuencias SjPlot
frq()
library(tidyverse)
library(sjmisc)
select(d, myvars) %>% #tabla de frecuencias SjPlot
frq()
select(d, myvars) %>%
descr()
#12. Transformar datos: recodificar
frq(d$voto16)
d$voto16r <- recode(d$voto16, "PP"="PP", "PSOE"="PSOE",
"Cs"="Cs", "ECPodem"="Podemos", "Podemos"="Podemos",
"Compromis"="Podemos", "En Marea" = "Podemos",
"NoVoto"="No voto", "NC"="NC", "NR"="NR", .default="Otros")
frq(d$voto16r)
frq(d$voto15)
d$voto15r <- recode(d$voto15, "PP"="PP", "PSOE"="PSOE",
"Cs"="Cs", "ECPodem"="Podemos", "Podemos"="Podemos",
"Compromis"="Podemos", "En Marea" = "Podemos",
"NoVoto"="No voto", "NC"="NC", "NR"="NC", .default="Otros")
frq(d$voto15r)
#13. Compilar nueva variable - crear índice confianza pública y otro privada
myvars2 <- c("confparl", "confpart", "confjudic")
frq(d[,myvars2])
d <- mutate(d, confpub=ifelse(confparl>97 | confpart>97 | confjudic>97, NA, confparl + confpart + confjudic ))
descr(d$confpub) #comprobar variable
myvars3 <- c(myvars2, "confpub")
head(d[myvars3], n=100)
hist(d$confpub)
#14. Seleccionar casos
d2 <- filter(d, voto16r == "PSOE" | voto16r == "PP")
frq(d2$voto16r)
d3 <- filter(d, voto16r == "PSOE" | voto16r == "PP" & confpub>20)
frq(d3$voto16r)
descr(d3$confpub)
#15. Seleccionar variables
d5 <- select(d, cuest, voto16r)
head(d5)
d6 <- select(d, cuest, voto16r, confpart, confparl, confjudic, confpub)
head(d6)
#Limpia espacio y establece directorio de trabajo
rm(list=ls())
#confpub
d <- mutate(d, confpub=ifelse(confparl>97 | confpart>97 | confjudic>97, NA, confparl + confpart + confjudic ))
d <- foreign::read.spss("cis3145t.sav", to.data.frame = T)
#confpub
d <- mutate(d, confpub=ifelse(confparl>97 | confpart>97 | confjudic>97, NA, confparl + confpart + confjudic ))
descr(d$confpub)
hist(d$confpub)
#confpriv
d <- mutate(d, confpriv=ifelse(confong>97 | confbanco>97 | confmedia>97, NA, confbanco + confong + confmedia ))
descr(d$confpriv)
hist(d$confpriv)
#voto16
d$urnas16r <- recode(d$voto16, "NoVoto"="No voto", "NC"="NC", .default="Voto")
frq(d$urnas16r)
#G1.b) set-up el plot (data + aes)
g1 <- ggplot(d, aes(x=confpub, y=confpriv, col=urnas16r))
g1
#G1.c) añadir geom
g1 <- g1 + geom_point()
g1
#G1.d) set-up el plot (data + aes) subsetting data para excluir NA
g1b <- ggplot(filter(d, !is.na(urnas16r), urnas16r =! "NC"), aes(x=confpub, y=confpriv, col=urnas16r))
#G1.d) set-up el plot (data + aes) subsetting data para excluir NA
g1b <- ggplot(filter(d, !is.na(urnas16r), urnas16r != "NC"), aes(x=confpub, y=confpriv, col=urnas16r))
g1b
#G1.e) añadir geom (scatter)
g1b <- g1b + geom_point(position=position_jitter(.1), alpha=.3, shape=1)
g1b
#G1.f) añadir geom (línea de ajuste)
g1b <- g1b + geom_smooth(method="lm")
g1b
#G1.g) añadir geom (línea de ajuste general)
g1b <- g1b + geom_smooth( aes(col=factor(1)), method="lm")
g1b
#G1.h) modificar colores escala
g1b <- g1b + scale_colour_manual(values=c("red", "black", "green"), labels=c("Total", "No votó", "Votó"))
g1b
#G1.h) modificar colores escala
g1b <- g1b + scale_colour_manual(values=c("red", "black", "skyblue"), labels=c("Total", "No votó", "Votó"))
#G1.d) set-up el plot (data + aes) subsetting data para excluir NA
g1b <- ggplot(filter(d, !is.na(urnas16r), urnas16r != "NC"), aes(x=confpub, y=confpriv, col=urnas16r))
#G1.e) añadir geom (scatter)
g1b <- g1b + geom_point(position=position_jitter(.1), alpha=.3, shape=1)
#G1.f) añadir geom (línea de ajuste)
g1b <- g1b + geom_smooth(method="lm")
#G1.g) añadir geom (línea de ajuste general)
g1b <- g1b + geom_smooth( aes(col=factor(1)), method="lm")
#G1.h) modificar colores escala
g1b <- g1b + scale_colour_manual(values=c("red", "black", "skyblue"), labels=c("Total", "No votó", "Votó"))
#G1.i) modificar títulos ejes, título y título leyenda
g1b <- g1b + labs(x= "Confianza instituciones privadas", y="Confianza en instituciones públicas", col="Elecciones 2016", title="G1. Confianza instituciones públicas y privadas" )
g1b
#G2. a) Preparar variables
d$voto15r <- recode(d$voto15, "PP"="PP", "PSOE"="PSOE",
"Cs"="Cs", "ECPodem"="Podemos", "Podemos"="Podemos",
"Compromis"="Podemos", "En Marea" = "Podemos",
"NoVoto"="No voto", "NC"="NC", "NR"="NC", .default="Otros")
frq(d$voto15r)
d2 <- filter(d, voto15r != "No voto", voto15r != "NC")
frq(d2$voto15r)
#G2.b) Set-up ggplot
g2 <- ggplot(d2, aes(x=voto15r))
g2
#G2.c) Añadir geom: barras
g2 <- g2 + geom_bar(aes(y=..count../sum(..count..)*100), fill="gray", width = .75) #porcentajes
#g2 <- g2 + geom_bar(fill="gray", width = .75)
g2
#G2.d) Modificar escala eje y
g2 <- g2 + scale_y_continuous(limits=c(0, 40), breaks = c(0,10,20, 30, 40))
#g2 <- g2 + scale_y_continuous(limits=c(0, 1250), breaks = c(250,500,750,1000,1250))
g2
#G2.e) Añadir título ejes
g2 <- g2 + labs(x="", y="", title="G2. Recuerdo de voto elecciones 2015 (%)")
g2
#G3.a) Set-up ggplot
g3 <- ggplot(filter(d, !is.na(confpub), !is.na(confpriv)))
g3
#G3.b) Añadir geoms: histogramas
g3 <- g3 + geom_histogram(aes(x=confpub, y=..density.., fill="skyblue"), alpha=0.2, bins=30) +
geom_histogram(aes(x=confpriv, y=..density.., fill="red"), alpha=0.2, bins=30)
g3
#G3.c) Añadir geoms: líneas de densidad
g3 <- g3 + geom_density(aes(x=confpub, col="skyblue") ) +
geom_density(aes(x=confpriv, col="red"))
g3
#G3.d) Modificar leyenda
g3 <- g3 + scale_fill_discrete(labels=c("Privadas", "Públicas"), name="" ) +
scale_color_discrete(labels=c("Privadas", "Públicas"), name="")
g3
#G3.e) Añadir etiquetas
g3 <- g3 + labs(x="", y="", title="G3. Distribuciones confianza en instituciones \npúblicas y privadas")
g3
#G4.a) Preparar variables
d$voto16r <-recode(d$voto16, "PP"="PP", "PSOE"="PSOE",
"Cs"="Cs", "ECPodem"="Podemos", "Podemos"="Podemos",
"Compromis"="Podemos", "En Marea" = "Podemos",
"NoVoto"="No voto", "NC"="NC", "NR"="NR", .default="Otros")
frq(d$voto16r)
d3 <- filter(d, !is.na(d$confpub),  voto16r!='NC') %>%
select(confpub, voto16r)
#G4.b) set-up ggplot
g4 <- ggplot(d3, aes(x=voto16r, y=confpub))
g4
#G4.c) añadir geom: cajas
g4 <- g4 + geom_boxplot(fill="skyblue")
g4
#G4.d) etiquetas
g4 <- g4 + labs(x="", y="", title="G4. Distribución de confianza en instituciones\npúblicas según voto 2016")
g4
#G4.e) geom_box() resumen (Para reordenar las categorías habría que utilizar los levels del factor)
g4 <- g4 +  geom_boxplot(aes(x=factor("1")), fill="brown") +
scale_x_discrete(labels=c("España", "PP", "PSOE", "Podemos", "Cs", "Otros", "No votó"))
g4
#G5.a) Preparar variables
#voto16
frq(d$urnas16r)
#G5.b) Set-up ggplot
g5 <- ggplot(filter(d, !is.na(urnas16r)), aes(x = urnas16r, y =confpub))
g5
#G5.c) Añadir stat: summary(mean_cl_normal)
g5 <- g5 + stat_summary(fun.data = mean_cl_normal)
g5
install.packages("Hmisc")
#G5.c) Añadir stat: summary(mean_cl_normal)
g5 <- g5 + stat_summary(fun.data = mean_cl_normal)
g5
#G5.c) Añadir stat: summary(mean_cl_normal)
g5 <- g5 + stat_summary(fun.data = mean_cl_normal)
g5
#G5.b) Set-up ggplot
g5 <- ggplot(filter(d, !is.na(urnas16r)), aes(x = urnas16r, y =confpub))
g5
#G5.c) Añadir stat: summary(mean_cl_normal)
g5 <- g5 + stat_summary(fun.data = mean_cl_normal)
#G5.d) Límites eje x (0 a 30)
g5 <- g5 + coord_cartesian(ylim = c(0, 15))
g5
#G5.e) Etiquetas
g5 <- g5 + labs(x="", y="Confianza en instituciones públicas", title="G2. Media Confianza instituciones públicas \npor comportamiento electoral en 2016" )
g5
#Limpia espacio y establece directorio de trabajo
rm(list=ls())
d <- foreign::read.spss("cis3145t.sav", to.data.frame = T)
#confpub y confpriv
d <- mutate(d, confpub=ifelse(confparl>97 | confpart>97 | confjudic>97, NA, confparl + confpart + confjudic ),
confpriv=ifelse(confong>97 | confbanco>97 | confmedia>97, NA, confbanco + confong + confmedia))
descr(d$confpub)
hist(d$confpub)
descr(d$confpriv)
hist(d$confpriv)
#voto16
d$urnas16r <- recode(d$voto16, "NoVoto"="No voto", "NC"="NC", .default="Voto")
frq(d$urnas16r)
#G1.a) Set-up ggplot
g1 <- ggplot(d, aes(x = edad, y = confpub))
g1
#G1.b) Añadir geoms: barras
g1 <- g1 + geom_point(position="jitter", alpha=.3, shape=1)
g1
#G1.c) Añadir geoms: líneas de densidad
g1 <- g1 + geom_smooth(method="lm")
g1
#G1.a) Set-up ggplot
g1 <- ggplot(d, aes(x = confpriv, y = confpub))
g1
#G1.b) Añadir geoms: barras
g1 <- g1 + geom_point(position="jitter", alpha=.3, shape=1)
g1
#G1.c) Añadir geoms: líneas de densidad
g1 <- g1 + geom_smooth(method="lm")
g1
#G1.a) Set-up ggplot
g1 <- ggplot(d, aes(x = as.numeric(edad), y = confpub))
g1
#G1.b) Añadir geoms: barras
g1 <- g1 + geom_point(position="jitter", alpha=.3, shape=1)
g1
#G1.c) Añadir geoms: líneas de densidad
g1 <- g1 + geom_smooth(method="lm")
g1
#G1.d) Modificar leyenda
g1 <- g1 + facet_wrap( ~ esta)
g1
library(ggthemes)
library(gridExtra)
#G1.e) Añadir etiquetas
g1 <- g1 + labs(x="Edad", y="Confianza en instituciones públicas", title="G3. Relación entre edad y confianza en instituciones públicas \npor clase social" )
g1
d2 <- filter(d, !is.na(urnas16r))
#G2.a) Set-up ggplot
g2 <- ggplot(d2, aes(x = esta, fill=urnas16r))
g2
#G2.b) Añadir geoms: barras
g2a <- g2 + geom_bar() +
scale_x_discrete(labels = c("Alta", "Viejas Med", "Nuevas Med.", "Obr. cual", "Obr. no cual", "NC")) +
labs(x="", y="", fill="")
g2a
#G2.c) Añadir geoms: barras - position="stack"
g2b <- g2 + geom_bar(position="stack") +
scale_x_discrete(labels = c("Alta", "Viejas Med", "Nuevas Med.", "Obr. cual", "Obr. no cual", "NC")) +
labs(x="", y="", fill="")
g2b
#G2.d) Añadir geoms: barras - position="dodge"
g2c <- g2 + geom_bar(position="dodge") +
scale_x_discrete(labels = c("Alta", "Viejas Med", "Nuevas Med.", "Obr. cual", "Obr. no cual", "NC")) +
labs(x="", y="", fill="")
g2c
#G2.d) Añadir geoms: barras - position="dodge"
g2d <- g2 + geom_bar(position="fill") +
scale_x_discrete(labels = c("Alta", "Viejas Med", "Nuevas Med.", "Obr. cual", "Obr. no cual", "NC")) +
labs(x="", y="", fill="")
g2d
#G2.e) Añadir etiquetas
g2comb <- grid.arrange(g2a, g2b, g2c, g2d, ncol=2, top=textGrob("G4. Voto en 2016 por estatus social "))
g2comb
#G2.e) Añadir etiquetas
g2comb <- grid.arrange(g2a, g2b, g2c, g2d, ncol=2, top=text("G4. Voto en 2016 por estatus social "))
g2comb
#G2.e) Añadir etiquetas
g2comb <- grid.arrange(g2a, g2b, g2c, g2d, ncol=2)
g2comb
?grid.arrange
#G2.e) Añadir etiquetas
g2comb <- grid.arrange(g2a, g2b, g2c, g2d, ncol=2, top = quote("G4. Voto en 2016 por estatus social "))
g2comb
#G3.a) set-up el plot (data + aes) subsetting data para excluir NA
g3 <- ggplot(filter(d, urnas16r != "NC"), aes(x=confpub, y=confpriv, col=urnas16r))
g3
#G3.b) añadir geom (scatter)
g3 <- g3 + geom_point(position=position_jitter(.1), alpha=.3, shape=1)
g3
#G3.c) añadir stat (línea de ajuste)
g3 <- g3 + stat_smooth(method="lm")
g3
#G3.d) añadir stat (línea de ajuste para todos)
g3 <- g3 + stat_smooth(aes(col=factor(1)), method="lm")
g3
#G3.e) modificar colores escala
g3 <- g3 + scale_colour_manual(values=c("red", "black", "skyblue"), labels=c("Total", "No votó", "Votó"))
g3
#G3.f) modificar títulos ejes, título y título leyenda
g3 <- g3 + labs(x= "Confianza instituciones privadas", y="Confianza en instituciones públicas", col="Elecciones 2016", title="G1. Confianza instituciones públicas y privadas" )
g3
#G3.g) incluir tema
g3
g3 <- g3 +theme(legend.position = "bottom",
legend.title = element_blank(),
panel.grid = element_blank(),
axis.text = element_text(colour = "gray"),
axis.title = element_text(colour = "gray"),
axis.line = element_line(colour="gray"),
axis.ticks = element_line(colour = "gray"),
panel.background = element_rect(fill="white"),
plot.title = element_text(color="gray31"))
g3
#G4.a) Set-up ggplot
g4 <- ggplot(filter(d, !is.na(confpub), !is.na(confpriv)))
g4
#G4.b) Añadir geoms: histogramas
g4 <- g4 + geom_histogram(aes(x=confpub, y=..density.., fill="skyblue"), alpha=0.2, bins=30) +
geom_histogram(aes(x=confpriv, y=..density.., fill="red"), alpha=0.2, bins=30)
g4
#G4.c) Añadir geoms: líneas de densidad
g4 <- g4 + geom_density(aes(x=confpub, col="skyblue") ) +
geom_density(aes(x=confpriv, col="red"))
g4
#G4.d) Modificar leyenda
g4 <- g4 + scale_fill_discrete(labels=c("Privadas", "Públicas"), name="" ) +
scale_color_discrete(labels=c("Privadas", "Públicas"), name="")
g4
#G4.e) Añadir etiquetas
g4 <- g4 + labs(x="", y="", title="G3. Distribuciones confianza en instituciones \npúblicas y privadas")
g4
#G4.f) Probar different themes
g4 <- g4 + theme_tufte()
g4
knitr::opts_chunk$set(echo = FALSE)
setwd("G:/Mi unidad/PhD/2. Working area/6. Teaching/Cursos/2018_06_Curso visualización datos/Sesion3 - ggplot2Plus/slides")
library(foreign)
library(sjmisc)
library(tidyverse)
library(grid)
library(gridExtra)
library(ggthemes)
library(ggrepel)
install.packages("ggrepel")
install.packages("gganimate")
ggsave(myplot.png, plot=myplot)
qplot(mpg, data = mtcars)
qplot(mpg, data = mtcars, geom = "dot")
qplot(mpg, data = mtcars, geom = "point")
qplot(mpg, data = mtcars, geom = "dotplot")
qplot(mpg, data = mtcars, geom = "dotplot", col = factor(cyl))
qplot(mpg, data = mtcars, geom = "dotplot", fill = factor(cyl))
install.packages("gganimate")
