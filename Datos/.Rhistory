with(anscombe, abline(lm(y2~x2), col="red"))
with(anscombe, plot(x3, y3))
with(anscombe, abline(lm(y3~x3), col="red"))
with(anscombe, plot(x4, y4))
with(anscombe, abline(lm(y4~x4), col="red"))
par(mfrow=c(2,2), mar = c(5, 5, 1.5, 1.5))
with(anscombe, plot(x1, y1, ylim = c(3, 13)))
with(anscombe, abline(lm(y1~x1), col="red"))
with(anscombe, plot(x2, y2), ylim = c(0, 13))
with(anscombe, abline(lm(y2~x2), col="red"))
with(anscombe, plot(x3, y3))
with(anscombe, abline(lm(y3~x3), col="red"))
with(anscombe, plot(x4, y4))
with(anscombe, abline(lm(y4~x4), col="red"))
par(mfrow=c(2,2), mar = c(5, 5, 1.5, 1.5))
with(anscombe, plot(x1, y1, ylim = c(3, 13)))
with(anscombe, abline(lm(y1~x1), col="red"))
with(anscombe, plot(x2, y2, ylim = c(3, 13)))
with(anscombe, abline(lm(y2~x2), col="red"))
with(anscombe, plot(x3, y3, ylim = c(3, 13)))
with(anscombe, abline(lm(y3~x3), col="red"))
with(anscombe, plot(x4, y4, ylim = c(3, 13)))
with(anscombe, abline(lm(y4~x4), col="red"))
library(tidyverse)
install.packages("sjmisc")
head(islands)
head(swiss)
head(uspop)
head(Seatbelts)
head(infert)
descr::freq(infert$education)
sjmisc::frq(infert$education)
mtcars$cyl2 <- recode(mtcars$cyl,
"4"="Bajo", .default ="Alto")
head(mtcars)
knitr::opts_chunk$set(echo = FALSE)
setwd("G:/Mi unidad/PhD/2. Working area/6. Teaching/Cursos/2018_06_Curso visualización datos/Sesion1 - IntroDV/slides")
library(tidyverse)
library(descr)
library(sjmisc)
crosstab(mtcars$cyl, mtcars$am)
crosstab(mtcars$cyl, mtcars$am, prop.c = T)
crosstab(mtcars$cyl, mtcars$am, prop.c = T, plot = F)
mtcars <- mutate(mtcars, acepeso = qsec/wt)
mtcars <- mutate(mtcars, acepeso2=ifelse(am==0,
qsec/wt, NA))
head(subset(mtcars, select =
c(am, qsec, wt, acepeso, acepeso2)), n=4)
mtcars <- mutate(mtcars, acepeso = qsec/wt)
mtcars <- mutate(mtcars, acepeso2=ifelse(am==1,
qsec/wt, NA))
head(subset(mtcars, select =
c(am, qsec, wt, acepeso, acepeso2)), n=4)
table(mtcars$cyl)
mtcars$cyl2 <- recode(mtcars$cyl,
4="Bajo", .default ="Alto")
table(mtcars$cyl)
mtcars$cyl2 <- recode(mtcars$cyl,
4="Bajo", 6 = "Medio", 8 = "Alto")
table(mtcars$cyl)
mtcars$cyl2 <- recode(mtcars$cyl,
4 = "Bajo", 6 = "Medio", 8 = "Alto")
table(mtcars$cyl)
mtcars$cyl2 <- recode(mtcars$cyl,
´4´ = "Bajo", ´6´ = "Medio", ´8´ = "Alto")
table(mtcars$cyl)
mtcars$cyl2 <- recode(mtcars$cyl,
`4` = "Bajo", `6` = "Medio", `8` = "Alto")
table(mtcars$cyl, mtcars$cyl2)
install.packages("tidyverse")
install.packages("tidyverse")
#2. Limpia espacio y establece directorio de trabajo
rm(list=ls())
#3. Crear vectores.
x <- c(2,4,6)
y <- c(3,4,7)
#4. Operar con vectores
#4a - Calcular medias
meanx <- mean(x)
meany <- mean(y)
#4b - Sumar vectores x e y
sumxy <- x + y
#4c - multiplica vectores x e y
multx <- x*meanx
#4d - Operación lógica meanx y meany
meanx==meany
#5. Crear un data frame con los vectores x e y mydata
mydata <- cbind(x, y) #combinar los dos vectores como columnas
mydata <- as.data.frame(mydata) #convertir la combinación en data frame
mean(mydata$x) #media de la variable X dentro del data frame mydata
#6. Crear un vector con el sexo de los niños
sex <- c("masc", "fem", "masc")
#7. Añadir vector sex a mydata creando mydata2
mydata2 <- cbind(sex, mydata)
#8. Clase de los objetos y transformación de tipo (factor y numérico)
class(sex)
class(mydata2$sex)
levels(mydata2$sex)
mydata2$sex <- as.numeric(mydata2$sex) #pasa de factor a numérica
class(mydata2$sex)
mydata2$sex <- as.factor(mydata2$sex) #pasa de numérica a factor
class(mydata2$sex)
levels(mydata2$sex)
levels(mydata2$sex) <- c('masc', 'fem') #recupera los niveles del factor
levels(mydata2$sex)
#9. Abrir datos (estudio poselectoral CIS 2016) en formato SPSS y asignar a un data frame
d <- haven::read_spss("https://github.com/pablocal/EMASdataviz/cis3145t.sav") #abierto usando paquete haven
#9. Abrir datos (estudio poselectoral CIS 2016) en formato SPSS y asignar a un data frame
d <- haven::read_spss("https://github.com/pablocal/EMASdataviz/blob/master/cis3145t.sav") #abierto usando paquete haven
setwd("G:/Mi unidad/PhD/2. Working area/6. Teaching/Cursos/2018_06_Curso visualización datos/EMASdataviz/Datos") #Aquí deberás poner todos los datos
getwd()
#9. Abrir datos (estudio poselectoral CIS 2016) en formato SPSS y asignar a un data frame
d <- haven::read_spss("cis3145t.sav") #abierto usando paquete haven
#10. Explora los datos usando las funciones str() y view_df()
str(d) #viatazo general a las variables y el tipo
view_df(d, show.frq = T, show.prc = T) #Vista de los códigos y las distribuciones
head(d, n=20) #listar los primeros valores de las variables
tail(d, n=20) #listar los últimos valores de las variables
summary(d) #resumen de las variables
#11. Explora las variables confparl, confpart, confjudic, confmedia,
#confbanco, confong, voto15 y voto16
myvars <- c("confparl", "confpart", "confjudic", "confmedia", "confbanco", "confong", "voto16", "voto15")
descr(d[, myvars])
descr(select(d, myvars))
freq(d[,myvars]) #tabla de frecuencias SjPlot
descr(select(d, myvars))
desc(select(d, myvars))
for (i in myvars){
desc(paste0("d$", i))
}
for (i in myvars){
print(desc(paste0("d$", i)))
}
select(d, myvars) %>%
desc()
select(d, myvars) %>%
descr()
select(d, myvars) %>%
frq()
select(d, myvars) %>% #tabla de frecuencias SjPlot
frq() %>%
descr()
select(d, myvars) %>%
descr()
#12. Transformar datos: recodificar
frq(d$voto16)
d$voto16r <- recode(d$voto16, "PP"="PP", "PSOE"="PSOE",
"Cs"="Cs", "ECPodem"="Podemos", "Podemos"="Podemos",
"Compromis"="Podemos", "En Marea" = "Podemos",
"NoVoto"="No voto", "NC"="NC", "NR"="NR", .default="Otros")
d$voto16r <- recode(d$voto16, "PP"="PP", "PSOE"="PSOE",
"Cs"="Cs", "ECPodem"="Podemos", "Podemos"="Podemos",
"Compromis"="Podemos", "En Marea" = "Podemos",
"NoVoto"="No voto", "NC"="NC", "NR"="NR", .default="Otros")
#9. Abrir datos (estudio poselectoral CIS 2016) en formato SPSS y asignar a un data frame
d <- foreign::read.spss("cis3145t.sav", to.data.frame = T) #abierto usando paquete haven
#10. Explora los datos usando las funciones str() y view_df()
str(d) #viatazo general a las variables y el tipo
head(d, n=20) #listar los primeros valores de las variables
tail(d, n=20) #listar los últimos valores de las variables
summary(d) #resumen de las variables
#11. Explora las variables confparl, confpart, confjudic, confmedia,
#confbanco, confong, voto15 y voto16
myvars <- c("confparl", "confpart", "confjudic", "confmedia", "confbanco", "confong", "voto16", "voto15")
select(d, myvars) %>% #tabla de frecuencias SjPlot
frq()
select(d, myvars) %>%
descr()
#12. Transformar datos: recodificar
frq(d$voto16)
d$voto16r <- recode(d$voto16, "PP"="PP", "PSOE"="PSOE",
"Cs"="Cs", "ECPodem"="Podemos", "Podemos"="Podemos",
"Compromis"="Podemos", "En Marea" = "Podemos",
"NoVoto"="No voto", "NC"="NC", "NR"="NR", .default="Otros")
sjt.frq(d$voto16r)
frq(d$voto16r)
frq(d$voto15)
d$voto15r <- recode(d$voto15, "PP"="PP", "PSOE"="PSOE",
"Cs"="Cs", "ECPodem"="Podemos", "Podemos"="Podemos",
"Compromis"="Podemos", "En Marea" = "Podemos",
"NoVoto"="No voto", "NC"="NC", "NR"="NC", .default="Otros")
frq(d$voto15r)
#13. Compilar nueva variable - crear índice confianza pública y otro privada
myvars2 <- c("confparl", "confpart", "confjudic", "confong", "confbanco", "confmedia")
frq(d[,myvars2])
d <- mutate(d, confpub=ifelse(confparl>97 | confpart>97 | confjudic>97, NA, confparl + confpart + confjudic ))
descr(d$confpub) #comprobar variable
myvars3 <- c(myvars2, "confpub")
head(d[myvars3], n=100)
hist(d$confpub)
#14. Asignar valores perdidos
myvars4 <- c(myvars2, "voto15r", "voto16r")
frq(d[, myvars4])
d$confparl <- set_na(d$confparl, c(98, 99))
d$voto16r <- set_na(d$voto16r, "NC")
d$voto15r <- set_na(d$voto15r, c("NC"))
#14. Seleccionar casos
d2 <- filter(d, voto16r = "PSOE" | voto16r = "PP")
#14. Seleccionar casos
d2 <- filter(d, voto16r = "PSOE", voto16r = "PP")
#14. Seleccionar casos
d2 <- filter(d, voto16r == "PSOE" | voto16r == "PP")
frq(d2$voto16r)
d3 <- filter(d, voto16r == "PSOE" | voto16r == "PP" & confpub>20)
frq(d3$voto16r)
descr(d3$confpub)
#16. Seleccionar variables
d5 <- select(d, cuest, voto16r)
head(d5)
d6 <- select(d, cuest, voto16r, confpart, confparl, confjudic, confpub)
head(d6)
#4d - Operación lógica meanx y meany
meanx==meany
levels(mydata2$sex) <- c('masc', 'fem') #recupera los niveles del factor
levels(mydata2$sex)
frq(mydata2$sex)
#12. Transformar datos: recodificar
frq(d$voto16)
d$voto16r <- recode(d$voto16, "PP"="PP", "PSOE"="PSOE",
"Cs"="Cs", "ECPodem"="Podemos", "Podemos"="Podemos",
"Compromis"="Podemos", "En Marea" = "Podemos",
"NoVoto"="No voto", "NC"="NC", "NR"="NR", .default="Otros")
frq(d$voto16r)
#13. Compilar nueva variable - crear índice confianza pública y otro privada
myvars2 <- c("confparl", "confpart", "confjudic")
frq(d[,myvars2])
mp <- ggplot(mtcars, aes(x = factor(am), y = wt))
mp + geom_boxplot()
#Limpia espacio y establece directorio de trabajo
rm(list=ls())
library(sjmisc)
library(tidyverse)
#Limpia espacio y establece directorio de trabajo
rm(list=ls())
setwd("G:/Mi unidad/PhD/2. Working area/6. Teaching/Cursos/2018_06_Curso visualización datos/EMASdataviz/Datos")
getwd()
d <- read.spss("cis3145t.sav", to.data.frame = T)
d <- foreign::read.spss("cis3145t.sav", to.data.frame = T)
#confpub
d <- mutate(d, confpub=ifelse(confparl>97 | confpart>97 | confjudic>97, NA, confparl + confpart + confjudic ))
descr(d$confpub)
hist(d$confpub)
#confpriv
d <- mutate(d, confpriv=ifelse(confong>97 | confbanco>97 | confmedia>97, NA, confbanco + confong + confmedia ))
descr(d$confpriv)
hist(d$confpriv)
#voto16
d$urnas16r <- recode(d$voto16, "NoVoto"="No voto", "NC"="NC", .default="Voto")
d$urnas16r <- set_na(d$urnas16r, na = 'NC')
sjt.frq(d$urnas16r)
frq(d$urnas16r)
#G1.b) set-up el plot (data + aes)
g1 <- ggplot(d, aes(x=confpub, y=confpriv, col=urnas16r))
g1
#G1.c) añadir geom
g1 <- g1 + geom_point()
g1
#G1.b) set-up el plot (data + aes)
g1 <- ggplot(filter(d, !is.na(urnas16r)), aes(x=confpub, y=confpriv, col=urnas16r))
g1
#G1.c) añadir geom
g1 <- g1 + geom_point()
g1
#G1.b) set-up el plot (data + aes)
g1 <- ggplot(d, aes(x=confpub, y=confpriv, col=urnas16r))
g1
#G1.c) añadir geom
g1 <- g1 + geom_point()
g1
#G1.d) set-up el plot (data + aes) subsetting data para excluir NA
g1b <- ggplot(filter(d, !is.na(urnas16r)), aes(x=confpub, y=confpriv, col=urnas16r))
g1b
#G1.e) añadir geom (scatter)
g1b <- g1b + geom_point(position=position_jitter(.1), alpha=.3, shape=1)
g1b
#G1.f) añadir geom (línea de ajuste)
g1b <- g1b + geom_smooth(method="lm")
g1b
#G1.g) añadir geom (línea de ajuste general)
g1b <- g1b + geom_smooth( aes(col=factor(1)), method="lm")
g1b
#G1.h) modificar colores escala
g1b <- g1b + scale_colour_manual(values=c("red", "black", "skyblue"), labels=c("Total", "No votó", "Votó"))
g1b
#G1.i) modificar títulos ejes, título y título leyenda
g1b <- g1b + labs(x= "Confianza instituciones privadas", y="Confianza en instituciones públicas", col="Elecciones 2016", title="G1. Confianza instituciones públicas y privadas" )
g1b
#G2. a) Preparar variables
d$voto15r <- recode(d$voto15, "PP"="PP", "PSOE"="PSOE",
"Cs"="Cs", "ECPodem"="Podemos", "Podemos"="Podemos",
"Compromis"="Podemos", "En Marea" = "Podemos",
"NoVoto"="No voto", "NC"="NC", "NR"="NC", .default="Otros")
frq(d$voto15r)
d2 <- filter(d, voto15r != "No votó + NC")
frq(d2$voto15r)
d2 <- filter(d, voto15r != "No voto", voto15r != "NC")
frq(d2$voto15r)
d2 <- filter(d, voto15r != "No voto", voto15r != "NC")
frq(d2$voto15r)
#G2.b) Set-up ggplot
g2 <- ggplot(d2, aes(x=voto15r))
g2
#G2.c) Añadir geom: barras
g2 <- g2 + geom_bar(aes(y=..count../sum(..count..)*100), fill="gray", width = .75) #porcentajes
#g2 <- g2 + geom_bar(fill="gray", width = .75)
g2
#G2.d) Modificar escala eje y
g2 <- g2 + scale_y_continuous(limits=c(0, 40), breaks = c(0,10,20, 30, 40))
#g2 <- g2 + scale_y_continuous(limits=c(0, 1250), breaks = c(250,500,750,1000,1250))
g2
#G2.e) Añadir título ejes
g2 <- g2 + labs(x="", y="", title="G2. Recuerdo de voto elecciones 2015 (%)")
g2
#G3.a) Set-up ggplot
g3 <- ggplot(subset(d, !is.na(confpub) & !is.na(confpriv)))
g3
#G3.a) Set-up ggplot
g3 <- ggplot(filter(d, !is.na(confpub) & !is.na(confpriv)))
g3
#G3.b) Añadir geoms: histogramas
g3 <- g3 + geom_histogram(aes(x=confpub, y=..density.., fill="skyblue"), alpha=0.2, bins=30) +
geom_histogram(aes(x=confpriv, y=..density.., fill="red"), alpha=0.2, bins=30)
g3
#G3.c) Añadir geoms: líneas de densidad
g3 <- g3 + geom_density(aes(x=confpub, col="skyblue") ) +
geom_density(aes(x=confpriv, col="red"))
g3
#G3.d) Modificar leyenda
g3 <- g3 + scale_fill_discrete(labels=c("Privadas", "Públicas"), name="" ) +
scale_color_discrete(labels=c("Privadas", "Públicas"), name="")
g3
#G3.e) Añadir etiquetas
g3 <- g3 + labs(x="", y="", title="G3. Distribuciones confianza en instituciones \npúblicas y privadas")
g3
#G4.a) Preparar variables
d$voto16r <-recode(d$voto16, "PP"="PP", "PSOE"="PSOE",
"Cs"="Cs", "ECPodem"="Podemos", "Podemos"="Podemos",
"Compromis"="Podemos", "En Marea" = "Podemos",
"NoVoto"="No voto", "NC"="NC", "NR"="NR", .default="Otros")
frq(d$voto16r)
d3 <- filter(d, !is.na(d$confpub),  voto16r!='NC') %>%
select(confpub, voto16r)
#G4.b) set-up ggplot
g4 <- ggplot(d3, aes(x=voto16r, y=confpub))
g4
#G4.c) añadir geom: cajas
g4 <- g4 + geom_boxplot(fill="skyblue")
g4
#G4.d) etiquetas
g4 <- g4 + labs(x="", y="", title="G4. Distribución de confianza en instituciones\npúblicas según voto 2016")
g4
#G4.e) geom_box() resumen (Para reordenar las categorías habría que utilizar los levels del factor)
g4 <- g4 +  geom_boxplot(aes(x=factor("1")), fill="brown") +
scale_x_discrete(labels=c("España", "PP", "PSOE", "Podemos", "Cs", "Otros", "No votó"))
g4
#confpub y confpriv
d <- mutate(d, confpub=ifelse(confparl>97 | confpart>97 | confjudic>97, NA, confparl + confpart + confjudic ),
confpriv=ifelse(confong>97 | confbanco>97 | confmedia>97, NA, confbanco + confong + confmedia))
descr(d$confpub)
hist(d$confpub)
descr(d$confpriv)
hist(d$confpriv)
#voto16
d$urnas16r <- recode(d$voto16, "NoVoto"="No voto", "NC"="NC", .default="Voto")
#Limpia espacio y establece directorio de trabajo
rm(list=ls())
d <- foreign::read.spss("cis3145t.sav", to.data.frame = T)
#confpub
d <- mutate(d, confpub=ifelse(confparl>97 | confpart>97 | confjudic>97, NA, confparl + confpart + confjudic ))
descr(d$confpub)
hist(d$confpub)
#confpriv
d <- mutate(d, confpriv=ifelse(confong>97 | confbanco>97 | confmedia>97, NA, confbanco + confong + confmedia ))
descr(d$confpriv)
hist(d$confpriv)
#voto16
d$urnas16r <- recode(d$voto16, "NoVoto"="No voto", "NC"="NC", .default="Voto")
frq(d$urnas16r)
#G1.b) set-up el plot (data + aes)
g1 <- ggplot(d, aes(x=confpub, y=confpriv, col=urnas16r))
g1
#G1.c) añadir geom
g1 <- g1 + geom_point()
g1
#G1.d) set-up el plot (data + aes) subsetting data para excluir NA
g1b <- ggplot(filter(d, !is.na(urnas16r)), aes(x=confpub, y=confpriv, col=urnas16r))
g1b
#G1.e) añadir geom (scatter)
g1b <- g1b + geom_point(position=position_jitter(.1), alpha=.3, shape=1)
g1b
#G1.f) añadir geom (línea de ajuste)
g1b <- g1b + geom_smooth(method="lm")
g1b
#G1.g) añadir geom (línea de ajuste general)
g1b <- g1b + geom_smooth( aes(col=factor(1)), method="lm")
g1b
#G1.h) modificar colores escala
g1b <- g1b + scale_colour_manual(values=c("red", "black", "skyblue"), labels=c("Total", "No votó", "Votó"))
g1b
#G1.i) modificar títulos ejes, título y título leyenda
g1b <- g1b + labs(x= "Confianza instituciones privadas", y="Confianza en instituciones públicas", col="Elecciones 2016", title="G1. Confianza instituciones públicas y privadas" )
g1b
#G2. a) Preparar variables
d$voto15r <- recode(d$voto15, "PP"="PP", "PSOE"="PSOE",
"Cs"="Cs", "ECPodem"="Podemos", "Podemos"="Podemos",
"Compromis"="Podemos", "En Marea" = "Podemos",
"NoVoto"="No voto", "NC"="NC", "NR"="NC", .default="Otros")
frq(d$voto15r)
d2 <- filter(d, voto15r != "No voto", voto15r != "NC")
frq(d2$voto15r)
#G2.b) Set-up ggplot
g2 <- ggplot(d2, aes(x=voto15r))
g2
#G2.c) Añadir geom: barras
g2 <- g2 + geom_bar(aes(y=..count../sum(..count..)*100), fill="gray", width = .75) #porcentajes
#g2 <- g2 + geom_bar(fill="gray", width = .75)
g2
#G2.d) Modificar escala eje y
g2 <- g2 + scale_y_continuous(limits=c(0, 40), breaks = c(0,10,20, 30, 40))
#g2 <- g2 + scale_y_continuous(limits=c(0, 1250), breaks = c(250,500,750,1000,1250))
g2
#G2.e) Añadir título ejes
g2 <- g2 + labs(x="", y="", title="G2. Recuerdo de voto elecciones 2015 (%)")
#G3.a) Set-up ggplot
g3 <- ggplot(filter(d, !is.na(confpub), !is.na(confpriv)))
g2
g3
#G3.b) Añadir geoms: histogramas
g3 <- g3 + geom_histogram(aes(x=confpub, y=..density.., fill="skyblue"), alpha=0.2, bins=30) +
geom_histogram(aes(x=confpriv, y=..density.., fill="red"), alpha=0.2, bins=30)
g3
#G3.c) Añadir geoms: líneas de densidad
g3 <- g3 + geom_density(aes(x=confpub, col="skyblue") ) +
geom_density(aes(x=confpriv, col="red"))
g3
#G3.d) Modificar leyenda
g3 <- g3 + scale_fill_discrete(labels=c("Privadas", "Públicas"), name="" ) +
scale_color_discrete(labels=c("Privadas", "Públicas"), name="")
#G3.e) Añadir etiquetas
g3 <- g3 + labs(x="", y="", title="G3. Distribuciones confianza en instituciones \npúblicas y privadas")
g3
g3
#G4.a) Preparar variables
d$voto16r <-recode(d$voto16, "PP"="PP", "PSOE"="PSOE",
"Cs"="Cs", "ECPodem"="Podemos", "Podemos"="Podemos",
"Compromis"="Podemos", "En Marea" = "Podemos",
"NoVoto"="No voto", "NC"="NC", "NR"="NR", .default="Otros")
frq(d$voto16r)
d3 <- filter(d, !is.na(d$confpub),  voto16r!='NC') %>%
select(confpub, voto16r)
#G4.b) set-up ggplot
g4 <- ggplot(d3, aes(x=voto16r, y=confpub))
g4
g4
#G4.d) etiquetas
g4 <- g4 + labs(x="", y="", title="G4. Distribución de confianza en instituciones\npúblicas según voto 2016")
#G4.c) añadir geom: cajas
g4 <- g4 + geom_boxplot(fill="skyblue")
g4
#G4.e) geom_box() resumen (Para reordenar las categorías habría que utilizar los levels del factor)
g4 <- g4 +  geom_boxplot(aes(x=factor("1")), fill="brown") +
scale_x_discrete(labels=c("España", "PP", "PSOE", "Podemos", "Cs", "Otros", "No votó"))
g4
descr(d$confpub)
hist(d$confpub)
descr(d$confpriv)
hist(d$confpriv)
frq(d$urnas16r)
#G1.a) set-up el plot (data + aes) filter data para excluir NA
g1b <- ggplot(filter(d, !is.na(urnas16r)), aes(x=confpub, y=confpriv, col=urnas16r))
g1b
#G1.b) añadir geom (scatter)
g1b <- g1b + geom_point(position=position_jitter(.1), alpha=.3, shape=1)
g1b
#G1.c) añadir stat (línea de ajuste)
g1b <- g1b + stat_smooth(method="lm")
g1b
#G1.d) añadir stat (línea de ajuste para todos)
g1b <- g1b + stat_smooth(aes(col=factor(1)), method="lm")
g1b
#G1.e) modificar colores escala
g1b <- g1b + scale_colour_manual(values=c("red", "black", "skyblue"), labels=c("Total", "No votó", "Votó"))
g1b
#G1.f) modificar títulos ejes, título y título leyenda
g1b <- g1b + labs(x= "Confianza instituciones privadas", y="Confianza en instituciones públicas", col="Elecciones 2016", title="G1. Confianza instituciones públicas y privadas" )
g1b
frq(d$urnas16r)
#G2.b) Set-up ggplot
g2 <- ggplot(filter(d, !is.na(urnas16r)), aes(x = urnas16r, y =confpub))
g2
#G2.c) Añadir stat: summary(mean_cl_normal)
g2 <- g2 + stat_summary(fun.data = mean_cl_normal)
g2
#G2.d) Límites eje x (0 a 30)
g2 <- g2 + scale_y_continuous(limits = c(0, 15), breaks = c(0,5,10,15))
g2
#G2.e) Etiquetas
g2 <- g2 + labs(x="", y="Confianza en instituciones públicas", title="G2. Media Confianza instituciones públicas \npor comportamiento electoral en 2016" )
g2
frq(d$urnas16r)
#G2.b) Set-up ggplot
g2 <- ggplot(filter(d, !is.na(urnas16r)), aes(x = urnas16r, y =confpub))
g2
#G2.c) Añadir stat: summary(mean_cl_normal)
g2 <- g2 + stat_summary(fun.data = mean_cl_normal)
g2
#G2.d) Límites eje x (0 a 30)
g2 <- g2 + scale_y_continuous(limits = c(0, 15), breaks = c(0,5,10,15))
g2
#G2.e) Etiquetas
g2 <- g2 + labs(x="", y="Confianza en instituciones públicas", title="G2. Media Confianza instituciones públicas \npor comportamiento electoral en 2016" )
g2
